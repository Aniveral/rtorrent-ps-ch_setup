#
# /etc/sysctl.conf - Configuration file for setting system variables
# See /etc/sysctl.d/ for additional system variables.
# See sysctl.conf (5) for information.
#

#kernel.domainname = example.com

# Uncomment the following to stop low-level messages on console
#kernel.printk = 3 4 1 3

##############################################################3
# Functions previously found in netbase
#

# Uncomment the next two lines to enable Spoof protection (reverse-path filter)
# Turn on Source Address Verification in all interfaces to
# prevent some spoofing attacks
#net.ipv4.conf.default.rp_filter=1
#net.ipv4.conf.all.rp_filter=1

# Uncomment the next line to enable TCP/IP SYN cookies
# See http://lwn.net/Articles/277146/
# Note: This may impact IPv6 TCP sessions too
#net.ipv4.tcp_syncookies=1

# Uncomment the next line to enable packet forwarding for IPv4
#net.ipv4.ip_forward=1

# Uncomment the next line to enable packet forwarding for IPv6
#  Enabling this option disables Stateless Address Autoconfiguration
#  based on Router Advertisements for this host
#net.ipv6.conf.all.forwarding=1


###################################################################
# Additional settings - these settings can improve the network
# security of the host and prevent against some network attacks
# including spoofing attacks and man in the middle attacks through
# redirection. Some network environments, however, require that these
# settings are disabled so review and enable them as needed.
#
# Do not accept ICMP redirects (prevent MITM attacks)
#net.ipv4.conf.all.accept_redirects = 0
#net.ipv6.conf.all.accept_redirects = 0
# _or_
# Accept ICMP redirects only for gateways listed in our default
# gateway list (enabled by default)
# net.ipv4.conf.all.secure_redirects = 1
#
# Do not send ICMP redirects (we are not a router)
#net.ipv4.conf.all.send_redirects = 0
#
# Do not accept IP source route packets (we are not a router)
#net.ipv4.conf.all.accept_source_route = 0
#net.ipv6.conf.all.accept_source_route = 0
#
# Log Martian Packets
#net.ipv4.conf.all.log_martians = 1
#


##################################################################
# Virtual Memory Tweaks
# http://wiki.mikejung.biz/Ubuntu_Performance_Tuning#Virtual_Memory_Tweaks
#

# Determines how aggressive Linux should be when it comes to swapping in active pages in Memory to Disk.
# 10 will cause Linux to only swap out pages when it's close to utilizing all the available memory.
# This can help to reduce latency for most applications because more data should be kept in RAM instead of on disk
# Default: 60
vm.swappiness = 10

# Defines the maximum amount of memory that can be filled with dirty pages before they all must get flushed to the disk
# With higher values, dirty pages will remain in memory longer. Higher values can cause applications that are writing
# data to disk to start writing data to dirty pages in memory which will later be flushed to disk. 
# Percentage of total available memory that contains free and reclaimable pages at which a process that is generating
# disk writes will start writing out dirty data.
# Default: 20
vm.dirty_ratio = 50

# Determines the percentage of memory that can contain dirty pages before the background kernel flusher threads start
# to write dirty pages to disk. If you have 1GB of RAM and you set this to 10 then it would take 100MB of dirty pages
# to begin the flush process. If your priority is making sure data is written to disk as soon as possible then you
# want to set this to a low value. The percentage of total available memory that contains free and reclaimable pages
# at which the background kernel flusher threads will start writing out dirty data.
# Default: 10
# vm.dirty_background_ratio = 5

# Determines the amount of centiseconds (1 centisecond is 1/100 of a second) that a page needs to be dirty for, once
# this age has been reached the dirty page is considered eligible to be flushed to disk by the kernel flusher threads.
# If a dirty page exceeds this age, it will get flushed to disk the next time the flusher threads wake up.
# Larger values mean that data can be written to memory and remain there longer before the disk has to write it.
# Value is expressed in 100's of a second. Defines the age at which dirty pages are eligible to be written to disk by
# the kernel flusher threads. (1500 means 15 seconds)
# Default: 1500
vm.dirty_expire_centisecs = 6000


##################################################################
# Networking tweaks 
# http://wiki.mikejung.biz/Sysctl_tweaks
#

# Allowed local port range. Default: 32768 61000
net.ipv4.ip_local_port_range = 10240 65535
# The maximum number of "backlogged sockets". Increase number of incoming connections. Default: 128
net.core.somaxconn = 1000
# Increase number of incoming connections backlog. Default: 1000
net.core.netdev_max_backlog = 5000

# Maximum Socket Receive Buffer. 16MB per socket - which sounds like a lot, but will virtually never consume that much. Default: 212992
net.core.rmem_max = 16777216
# Maximum Socket Send Buffer. 16MB per socket - which sounds like a lot, but will virtually never consume that much. Default: 212992
net.core.wmem_max = 16777216
# Increase the write-buffer-space allocatable: min 4KB, def 12MB, max 16MB. Default: 4096 16384 4194304
net.ipv4.tcp_wmem = 4096 12582912 16777216
# Increase the read-buffer-space allocatable: min 4KB, def 12MB, max 16MB. Default: 4096 16384 4194304
net.ipv4.tcp_rmem = 4096 12582912 16777216

# Increase the number of outstanding syn requests allowed. Default: 128
net.ipv4.tcp_max_syn_backlog = 8096
# Tells the system whether it should start at the default window size only for new TCP connections or also for existing TCP connections that have been idle for too long. Default: 1
net.ipv4.tcp_slow_start_after_idle = 0
# Allow reuse of sockets in TIME_WAIT state for new connections only when it is safe from the network stackâ€™s perspective. Default: 0
net.ipv4.tcp_tw_reuse = 1
# Do not last the complete time_wait cycle. Default: 0
net.ipv4.tcp_tw_recycle = 1
# Minimum time a socket will stay in TIME_WAIT state (unusable after being used once). Default: 60
net.ipv4.tcp_fin_timeout = 30


